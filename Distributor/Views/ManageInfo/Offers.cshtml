@using Distributor.Helpers
@model Distributor.ViewModels.OfferManageViewModel

<div class="row">
    <div class="col-md-12">
        <h1 class="page-header">Manage Listings <small>Offers</small></h1>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-green">
            <div class="panel-heading">Your current offers made</div>
            <div class="panel-body">
                <table style="width:100%;" class="table table-striped table-bordered table-hover" id="offersMadeTable">
                    <thead>
                        <tr class="primary">
                            <th>Type</th>
                            <th>Status</th>
                            <th>Offer qty</th>
                            <th>Previous qty</th>
                            <th>Counter qty</th>
                            <th style="width:25px"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.OfferManageViewOffersCreated.Count; i++)
                        {
                            var offerId = @Model.OfferManageViewOffersCreated[i].OfferId;

                            @Html.HiddenFor(modelItem => Model.OfferManageViewOffersCreated[i].OfferId);
                            @Html.HiddenFor(modelItem => Model.OfferManageViewOffersCreated[i].ListingId);

                            <tr id=@offerId>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Model.OfferManageViewOffersCreated[i].ListingType.DisplayName()</td>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Model.OfferManageViewOffersCreated[i].OfferStatus.DisplayName()</td>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Html.DisplayFor(modelItem => Model.OfferManageViewOffersCreated[i].CurrentOfferQuantity)</td>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Html.DisplayFor(modelItem => Model.OfferManageViewOffersCreated[i].PreviousOfferQuantity)</td>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Html.DisplayFor(modelItem => Model.OfferManageViewOffersCreated[i].CounterOfferQuantity)</td>
                                <td><button type="submit" class="btn btn-xs btn-success btn-block" id=@offerId onclick="removeGroup(id)"><span class="glyphicon glyphicon-edit"></span></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
                <!-- /.table-responsive -->
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-green">
            <div class="panel-heading">Your current offers received</div>
            <div class="panel-body">
                <table style="width:100%;" class="table table-striped table-bordered table-hover" id="offersReceivedTable">
                    <thead>
                        <tr class="primary">
                            <th>Type</th>
                            <th>Status</th>
                            <th>Offer qty</th>
                            <th>Previous qty</th>
                            <th>Counter qty</th>
                            <th style="width:25px"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.OfferManageViewOffersReceived.Count; i++)
                        {
                            var offerId = @Model.OfferManageViewOffersReceived[i].OfferId;

                            @Html.HiddenFor(modelItem => Model.OfferManageViewOffersReceived[i].OfferId);
                            @Html.HiddenFor(modelItem => Model.OfferManageViewOffersReceived[i].ListingId);

                            <tr id=@offerId>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Model.OfferManageViewOffersReceived[i].ListingType.DisplayName()</td>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Model.OfferManageViewOffersReceived[i].OfferStatus.DisplayName()</td>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Html.DisplayFor(modelItem => Model.OfferManageViewOffersReceived[i].CurrentOfferQuantity)</td>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Html.DisplayFor(modelItem => Model.OfferManageViewOffersReceived[i].PreviousOfferQuantity)</td>
                                <td onclick="location.href='@Url.Action("Edit", "Offers", new { id = offerId })'">@Html.DisplayFor(modelItem => Model.OfferManageViewOffersReceived[i].CounterOfferQuantity)</td>
                                <td><button type="submit" class="btn btn-xs btn-success btn-block" id=@offerId onclick="removeGroup(id)"><span class="glyphicon glyphicon-edit"></span></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
                <!-- /.table-responsive -->
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">

        //Render tables
        $(document).ready(function () {
            $('#offersMadeTable').dataTable({
                'columns': [
                    null,
                    null,
                    null,
                    null,
                    null,
                    { 'orderable': false }
                ],
                responsive: true
            });
        });

        $(document).ready(function () {
            $('#offersReceivedTable').dataTable({
                'columns': [
                    null,
                    null,
                    null,
                    null,
                    null,
                    { 'orderable': false }
                ],
                responsive: true
            });
        });

    </script>
}