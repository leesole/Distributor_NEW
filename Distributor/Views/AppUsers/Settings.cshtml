@model Distributor.ViewModels.AppUserSettingsView

<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="panel panel-green" style="margin-top:50px">
                <div class="panel-heading">
                    <h3 class="panel-title">Settings</h3>
                </div>
                @using (Html.BeginForm())
                {
                    <div class="panel-body">
                        <form role="form">
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.HiddenFor(model => model.AppUserId)
                            
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.MaxDistanceFilter, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.MaxDistanceFilter, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MaxDistanceFilter, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.MaxAgeFilter, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.MaxAgeFilter, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MaxAgeFilter, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DisplayMyOrganisationListingsFilter, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.DisplayMyOrganisationListingsFilter)
                                        @Html.ValidationMessageFor(model => model.DisplayMyOrganisationListingsFilter, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <input type="submit" value="Submit" name="submitbutton" class="btn btn-success" />
                                <input type="reset" value="Reset" name="resetbutton" class="btn btn-danger" onclick="RefreshPage()" />
                            </div>
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

            function RefreshPage() {
                window.location.reload();
            }
    </script>
}
