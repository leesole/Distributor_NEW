@using Distributor.Helpers
@model IEnumerable<Distributor.ViewModels.UserTasksViewModel>

@{
    var referenceDescription = "";
    var referenceAdditionalDetails = "";
}

@section Scripts {
    @*@Scripts.Render("~/bundles/vendor")*@
    <script type="text/javascript">

        //Render tables
        $(document).ready(function () {
            $('#tasksTable').dataTable({
                responsive: true
            });
        });
    </script>
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Tasks</h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Tasks", "Index", "UserTasks")</li>
            <li class="active">History</li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">Your current tasks</div>
            <div class="panel-body">
                <table width="100%" class="table table-striped table-bordered table-hover" id="tasksTable">
                    <thead>
                        <tr class="primary">
                            <th>@Html.DisplayNameFor(model => model.TaskType)</th>
                            <th>@Html.DisplayNameFor(model => model.TaskDescription)</th>
                            <th>Reference details</th>
                            <th>Additional details</th>
                            <th>Closed</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            @Html.HiddenFor(modelItem => item.UserTaskId)
                            @Html.HiddenFor(modelItem => item.AppUser)

                            referenceDescription = "";
                            referenceAdditionalDetails = "";
                            if (item.AppUser != null)
                            {
                                referenceDescription = item.AppUser.FirstName + " " + item.AppUser.LastName;
                                referenceAdditionalDetails = item.AppUser.LoginEmail;
                            }
                            <tr id=@item.UserTaskId>
                                <td onclick="location.href='@Url.Action("Details", "UserTasks", new { id = item.UserTaskId })'">@item.TaskType.DisplayName()</td>
                                <td onclick="location.href='@Url.Action("Details", "UserTasks", new { id = item.UserTaskId })'">@Html.DisplayFor(modelItem => item.TaskDescription)</td>
                                <td onclick="location.href='@Url.Action("Details", "UserTasks", new { id = item.UserTaskId })'">@referenceDescription</td>
                                <td onclick="location.href='@Url.Action("Details", "UserTasks", new { id = item.UserTaskId })'">@referenceAdditionalDetails</td>
                                <td onclick="location.href='@Url.Action("Details", "UserTasks", new { id = item.UserTaskId })'">@Html.DisplayFor(modelItem => item.ChangedOn)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>