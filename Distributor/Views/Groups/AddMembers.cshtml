@model IEnumerable<Distributor.ViewModels.GroupMemberViewCreateModel>

@{ 
    var groupId = ViewBag.GroupId;
}

<div class="row">
    <div class="col-md-12">
        <h1 class="page-header">Groups <small>Add Members</small></h1>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Groups", "Index", "Groups")
            </li>
            <li class="active">Add members</li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-green">
            <div class="panel-heading">Group name: @ViewBag.GroupName</div>
            <div class="panel-body">
                <table style="width:100%;" class="table table-striped table-bordered table-hover" id="addMembersTable">
                    <thead>
                        <tr class="primary">
                            <th>@Html.DisplayNameFor(model => model.OrganisationName)</th>
                            <th>@Html.DisplayNameFor(model => model.AddressLine1)</th>
                            <th>@Html.DisplayNameFor(model => model.AddressTownCity)</th>
                            <th>@Html.DisplayNameFor(model => model.AddressPostcode)</th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model)
                        {
                            var orgId = item.GroupMemberId;

                            <tr>
                                @Html.HiddenFor(modelItem => item.GroupMemberId)
                                @Html.HiddenFor(modelItem => item.GroupId)
                                @Html.HiddenFor(modelItem => item.OrganisationId)
                                @Html.HiddenFor(modelItem => item.OrganisationName)
                                @Html.HiddenFor(modelItem => item.AddressLine1)
                                @Html.HiddenFor(modelItem => item.AddressTownCity)
                                @Html.HiddenFor(modelItem => item.AddressPostcode)
                                <td>@Html.DisplayFor(modelItem => item.OrganisationName)</td>
                                <td>@Html.DisplayFor(modelItem => item.AddressLine1)</td>
                                <td>@Html.DisplayFor(modelItem => item.AddressTownCity)</td>
                                <td>@Html.DisplayFor(modelItem => item.AddressPostcode)</td>
                                <td><button type="submit" class="btn btn-xs btn-danger btn-block" id=@orgId onclick="removeMember(id)"><span class="glyphicon glyphicon-remove"></span></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="panel-footer clearfix">
                <div class="form-group">
                    <div class="col-md-4 col-sm-6">Select organisation to add to group:</div>
                    <div class="col-md-8 col-sm-6">@Html.DropDownList("Organisation", (SelectList)ViewBag.OrganisationList, "Add organisation", new { @class = "form-control", @id = groupId, onchange = "javascipt:AddOrganisationDetails(this.value, this.id);" })</div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        //Render tables
        $(document).ready(function () {
            $('#addMembersTable').dataTable({
                'columns': [
                    null,
                    null,
                    null,
                    null,
                    { 'orderable': false }
                ],
                responsive: true
            });
        });

        function AddOrganisationDetails(organisationId, id) {
            $.ajax('@Url.Action("AddOrganisationToGroup", "Data")', {
                type: 'POST',
                dataType: 'json',
                data: {
                    'groupId': id,
                    'organisationId': organisationId
                },
                success: function (data, status, jqXHR) {
                    if ("success" === status) {
                        RefreshPage();
                    }
                }
            });
        }

        function removeMember(id) {
            if (window.confirm("Proceed?")) {
                var url = "/Data/RemoveMember";

                $.ajax({
                    url: url,
                    data: { organisationId: id },
                    cache: false,
                    type: "POST",
                    success: function (result) {
                        RefreshPage();
                    }
                });
            }
        }

        function RefreshPage() {
            window.location.reload();
        }
    </script>
}
